{"ast":null,"code":"var _jsxFileName = \"/Users/dzzzg8/Desktop/DZ_cc/country/src/JsonDisplay.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Desc: Component to display JSON data in a nested div format\n\nconst renderNestedDivs = (data, indent = 0) => {\n  const spaces = '  '.repeat(indent); // Two spaces per level of nesting\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.keys(data).map((key, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [spaces, /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [key, \": \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), typeof data[key] === 'object' ? renderNestedDivs(data[key], indent + 1) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: data[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 15\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, this);\n};\nconst JsonDisplay = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: renderNestedDivs(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = JsonDisplay;\nexport default JsonDisplay;\nvar _c;\n$RefreshReg$(_c, \"JsonDisplay\");","map":{"version":3,"names":["renderNestedDivs","data","indent","spaces","repeat","_jsxDEV","children","Object","keys","map","key","index","fileName","_jsxFileName","lineNumber","columnNumber","JsonDisplay","_c","$RefreshReg$"],"sources":["/Users/dzzzg8/Desktop/DZ_cc/country/src/JsonDisplay.js"],"sourcesContent":["// Desc: Component to display JSON data in a nested div format\n\nconst renderNestedDivs = (data, indent = 0) => {\n    const spaces = '  '.repeat(indent); // Two spaces per level of nesting\n    return (\n      <div>\n        {Object.keys(data).map((key, index) => (\n          <div key={index}>\n            {spaces}\n            <strong>{key}: </strong>\n            {typeof data[key] === 'object' ? (\n              renderNestedDivs(data[key], indent + 1)\n            ) : (\n              <span>{data[key]}</span>\n            )}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n\nconst JsonDisplay = ({ data }) => {\n  return (\n    <div>\n      <ul>\n        <li>\n          {renderNestedDivs(data)}\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default JsonDisplay;\n"],"mappings":";;AAAA;;AAEA,MAAMA,gBAAgB,GAAGA,CAACC,IAAI,EAAEC,MAAM,GAAG,CAAC,KAAK;EAC3C,MAAMC,MAAM,GAAG,IAAI,CAACC,MAAM,CAACF,MAAM,CAAC,CAAC,CAAC;EACpC,oBACEG,OAAA;IAAAC,QAAA,EACGC,MAAM,CAACC,IAAI,CAACP,IAAI,CAAC,CAACQ,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAChCN,OAAA;MAAAC,QAAA,GACGH,MAAM,eACPE,OAAA;QAAAC,QAAA,GAASI,GAAG,EAAC,IAAE;MAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACvB,OAAOd,IAAI,CAACS,GAAG,CAAC,KAAK,QAAQ,GAC5BV,gBAAgB,CAACC,IAAI,CAACS,GAAG,CAAC,EAAER,MAAM,GAAG,CAAC,CAAC,gBAEvCG,OAAA;QAAAC,QAAA,EAAOL,IAAI,CAACS,GAAG;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CACxB;IAAA,GAPOJ,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAGH,MAAMC,WAAW,GAAGA,CAAC;EAAEf;AAAK,CAAC,KAAK;EAChC,oBACEI,OAAA;IAAAC,QAAA,eACED,OAAA;MAAAC,QAAA,eACED,OAAA;QAAAC,QAAA,EACGN,gBAAgB,CAACC,IAAI;MAAC;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACE,EAAA,GAVID,WAAW;AAYjB,eAAeA,WAAW;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}